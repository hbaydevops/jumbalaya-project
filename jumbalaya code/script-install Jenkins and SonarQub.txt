script-install Jenkins and SonarQube

resource "aws_instance" "jenkins_sonarqube" {
  ami           = data.aws_ami.ubuntu.id  # Use the latest Ubuntu AMI
  instance_type = var.instance_type
  key_name      = var.key_name
  subnet_id     = var.subnet_id
  vpc_security_group_ids = [aws_security_group.jenkins_sonarqube_sg.id]
  

  # User data script to install Jenkins, SonarQube, PostgreSQL, and Jenkins agent
  user_data = <<-EOF
              #!/bin/bash

              # Install Jenkins
              curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
              echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/" | tee /etc/apt/sources.list.d/jenkins.list > /dev/null
              apt-get update -y
              apt-get install -y jenkins
              systemctl start jenkins
              systemctl enable jenkins

              # Install PostgreSQL (SonarQube dependency) and set up database
              apt-get install -y postgresql postgresql-contrib
              systemctl start postgresql
              systemctl enable postgresql

              # Create a database and user for SonarQube
              sudo -u postgres psql -c "CREATE DATABASE sonar;"
              sudo -u postgres psql -c "CREATE USER sonar WITH ENCRYPTED PASSWORD 'sonar';"
              sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE sonar TO sonar;"

              # Install SonarQube
              wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.zip -P /tmp
              unzip /tmp/sonarqube-9.9.0.zip -d /opt
              mv /opt/sonarqube-9.9.0 /opt/sonarqube
              groupadd sonar
              useradd -d /opt/sonarqube -g sonar sonar
              chown -R sonar:sonar /opt/sonarqube
              chmod -R 755 /opt/sonarqube

              # Configure SonarQube to run as a service
              cat <<EOT >> /etc/systemd/system/sonarqube.service
              [Unit]
              Description=SonarQube Service
              After=postgresql.service

              [Service]
              User=sonar
              ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
              ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
              Restart=always

              [Install]
              WantedBy=multi-user.target
              EOT

              # Start SonarQube service
              systemctl start sonarqube
              systemctl enable sonarqube

              # Install Java (required for Jenkins agent)
              apt-get install -y openjdk-11-jre

              # Download the Jenkins agent JAR file
              wget http://<JENKINS_MASTER_URL>/jnlpJars/agent.jar -P /opt/jenkins/

              # Create a service for the Jenkins agent
              cat <<EOT >> /etc/systemd/system/jenkins-agent.service
              [Unit]
              Description=Jenkins Agent
              After=network.target

              [Service]
              ExecStart=/usr/bin/java -jar /opt/jenkins/agent.jar -jnlpUrl http://<JENKINS_MASTER_URL>/computer/<NODE_NAME>/jenkins-agent.jnlp -secret <AGENT_SECRET> -workDir "/opt/jenkins"
              Restart=always

              [Install]
              WantedBy=multi-user.target
              EOT

              # Start Jenkins agent service
              systemctl start jenkins-agent
              systemctl enable jenkins-agent
              EOF

  tags = {
    Name = "jenkins-sonarqube-ec2"
  }
}